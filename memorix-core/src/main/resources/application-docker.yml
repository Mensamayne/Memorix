# Docker-specific configuration
# Used when running in Docker container with SPRING_PROFILES_ACTIVE=docker

server:
  port: 8080
  shutdown: graceful

spring:
  application:
    name: memorix
    
  datasource:
    url: jdbc:postgresql://postgres:5432/memorix
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
    
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    
  lifecycle:
    timeout-per-shutdown-phase: 30s

memorix:
  # Disable multi-datasource for Docker (single database setup)
  multi-datasource:
    enabled: false
  
  embedding:
    provider: ${MEMORIX_EMBEDDING_PROVIDER:openai}
    openai:
      api-key: ${OPENAI_API_KEY:}
      model: ${OPENAI_MODEL:text-embedding-3-small}
      base-url: ${OPENAI_BASE_URL:https://api.openai.com/v1}
      timeout: ${OPENAI_TIMEOUT:30000}
      max-retries: ${OPENAI_MAX_RETRIES:3}

logging:
  level:
    io.memorix: ${LOG_LEVEL_MEMORIX:INFO}
    io.memorix.api.rest: ${LOG_LEVEL_REST:INFO}
    io.memorix.storage: ${LOG_LEVEL_STORAGE:INFO}
    io.memorix.query: ${LOG_LEVEL_QUERY:INFO}
    io.memorix.embedding: ${LOG_LEVEL_EMBEDDING:INFO}
    org.springframework: ${LOG_LEVEL_SPRING:WARN}
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/memorix.log
    max-size: 10MB
    max-history: 7

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

